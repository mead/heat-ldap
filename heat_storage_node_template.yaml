heat_template_version: 2013-05-23

description: >
  A single storage node, with multiple volumes

parameters:
  image_id:
    type: string
  storage_node_flavor:
    type: string
  az:
    type: string
  ssh_key_name:
    type: string
  node_extra_packages:
    type: string
  osds_per_storage_node:
    type: number
  osd_volume_size_in_gb:
    type: number
  storage_node_name:
    type: string
  node_extra_packages:
    type: string
  ceph_release_name:
    type: string
  # osd_journal_volume_size_in_gb:
  #   type: number

resources:
  node_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
        name: ping_and_ssh
        description: Ping and SSH
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22

  storage-node:
    type: OS::Nova::Server
    properties:
      metadata:
        ansible_host_groups: storage
        ansible_host_vars: role=master
      image: { get_param: image_id }
      flavor: { get_param: storage_node_flavor }
      key_name: { get_param: ssh_key_name }
      availability_zone: { get_param: az }
      security_groups:
        - {get_resource: node_security_group}
      name: { get_param: storage_node_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -
            echo deb http://download.ceph.com/debian-$CEPH_RELEASE/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list
            sudo apt-get update
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q $EXTRA_PACKAGES
          params:
            $EXTRA_PACKAGES: { get_param: node_extra_packages }
            $CEPH_RELEASE: { get_param: ceph_release_name }

  group_of_volumes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: osds_per_storage_node }
      resource_def:
        type: heat_make_and_attach_volume_template.yaml
        properties:
          instance_id: { get_resource: storage-node }
          osd_volume_size_in_gb: { get_param: osd_volume_size_in_gb }
          az: { get_param: az }

  # osd_journal_volume:
  #   type: OS::Cinder::Volume
  #   properties:
  #     size: { get_param: osd_journal_volume_size_in_gb }
  #     description: Volume for OSD Journal
  #     availability_zone: { get_param: az }
  #
  # osd_journal_volume_attachment:
  #   type: OS::Cinder::VolumeAttachment
  #   properties:
  #     volume_id: { get_resource: osd_journal_volume }
  #     instance_uuid: { get_resource: storage-node }

# outputs:
#   storage-node:
#     description: IP Address of server having volumes attached.
#     value: { get_attr: [storage-node, first_address] }
